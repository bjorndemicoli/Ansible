set -g @plugin 'tmux-plugins/tmux-resurrect'
# change the default prefix key to C-w since we shouldn't need flow control
# unbind-key C-b
# set-option -g prefix C-w
# bind-key C-w last-window

#enable remain on exit
#set-option -g remain-on-exit 1

# reload tmux config file
bind r source-file /etc/tmux.conf

# ensure that our $TERM value specifies 256 colors
set-option -g default-terminal "screen-256color"

# start window indexing at one instead of zero
set-option -g base-index 1

# enable mouse 2.0
# set-option -g mouse on

# use vi-style key bindings in the status line, and copy/choice modes
set-option -g status-keys vi
set-window-option -g mode-keys vi

#set inactive/active window styles /// DON'T WORK ON 1.8
# set -g window-style 'fg=colour249,bg=colour235'
# set -g window-active-style 'fg=colour249,bg=colour232'

# custom status line with active window highlighting
set-option -g status-left '#[fg=colour255]#S: '
set-window-option -g window-status-format         '#[fg=colour255]#F#[fg=colour142]#I#[fg=colour250]:#[fg=default]#W#[fg=colour255]#F'
set-window-option -g window-status-current-format '#{?pane_synchronized,#[fg=blue]##,}#[fg=colour255]#F#[fg=colour18]#I#[fg=colour255]:#[fg=colour220]#W#[fg=colour255]#F#{?pane_synchronized,#[fg=blue]##,}'
set -g status-interval 2
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white] | %a %b %d %H:%M#[default]'
set -g status-right '#(localip) | #(freeram_h) | #(cut -d " " -f 1 /proc/loadavg) | %b %d %H:%M#[default]'
# set-option -g status-right '#[fg=colour245]| %a %b %d %I:%M %p'
set-option -g status-bg colour22
set-option -g status-fg colour007
set-window-option -g window-status-current-fg colour208


# attempt to set the window title
set-option -g set-titles on
set-option -g set-titles-string 'tmux on #H'

# use a large scrollback history
set-option -g history-limit 10000

# time in milliseconds to wait after an escape
set-option -g escape-time 10

# clear the scrollback history with <Ctrl-k>
bind-key C-k clear-history

# split more intutively with - (horizontal) and | (vertical)
unbind-key %
bind-key | split-window -h
unbind-key '"'
bind-key - split-window -v

# Create new window Alt-c or Super+Alt-c
bind -n M-c new-window

# Kill Pane Alt-x or Super+Alt-x
bind -n M-x kill-pane

# Control-{left,right} move windows

bind -n C-Left swap-window -t -1
bind -n C-Right swap-window -t +1

# Shift-{left-right} to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# move between panes without prefix but only pressing Alt-arrow
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# move between panes without prefix but only pressing Alt-arrow or Super+Alt-arrow
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-k select-pane -D

# move between panes with vim-like motions
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind key for synchronizing panes
bind-key a set-window-option synchronize-panes
bind -n M-z set-window-option synchronize-panes

# send the prefix to a nested client inside of the window
bind-key y send-prefix

## Join windows: <prefix> s, <prefix> j
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

## Split in multiple Horizontal-Panes
bind -n M-2 split-window -v \; select-layout even-vertical
bind -n M-3 split-window -v \; split-window -v \; select-layout even-vertical
bind -n M-4 split-window -v \; split-window -v \; split-window -v \; select-layout tiled

## Change Layout
bind -n M-- select-layout even-vertical
bind -n M-| select-layout even-horizontal
bind -n M-+ select-layout tiled

## Exit from current shell with Alt-d
bind -n M-d send-keys C-d \; select-layout even-vertical
