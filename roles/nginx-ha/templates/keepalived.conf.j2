vrrp_script chk_haproxy {
    script "/usr/libexec/keepalived/nginx-ha-manual-failover"
    interval 2
}

vrrp_instance public {
    interface eth1
{% if master is defined %}
    state MASTER
    priority 200
{% else %}
    state BACKUP
    priority 100
{% endif %}

    virtual_router_id 33
    unicast_src_ip {{ ansible_eth1.ipv4.address }}
    unicast_peer {
{% for node in groups['lb'] %}
{% if ansible_eth1.ipv4.address != hostvars[node]["ansible_eth1"]["ipv4"]["address"] %}
    {{ hostvars[node]["ansible_eth1"]["ipv4"]["address"] }}
{% endif %}
{% endfor %}
    }

    authentication {
        auth_type PASS
        auth_pass {{ lb.auth }}
    }

    virtual_ipaddress {
        {{ lb.internal_vip }}/32 dev eth1
    }

    track_script {
        chk_haproxy
    }
}

    }

    track_script {
        chk_haproxy
    }
}
